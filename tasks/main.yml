---
# tasks file for whirm.anontunnel_helper

- name: Create tunnel_helper group
  group: name=tunnel_helper

- name: Create tunnel_helper user
  user: name=tunnel_helper group=tunnel_helper home=/var/lib/tunnel_helper

- name: Install systemd unit
  command: cp /opt/tribler/systemd/anontunnel_helper@.service /etc/systemd/system/anontunnel_helper@.service
  register: service_file

- name: Create vars dir for the tunnel helper service
  file: dest=/etc/systemd/system/anontunnel_helper@.service.d state=directory

- name: Clear custom settings for the tunnel helper
  file: dest=/etc/systemd/system/anontunnel_helper@.service.d/exit_mode.conf state=absent

- name: Maybe enable exit mode {{anontunnel_exit_mode_enabled}} {{anontunnel_multichain_enabled}}
  ini_file: dest=/etc/systemd/system/anontunnel_helper@.service.d/exit_mode.conf section=Service option=Environment value="EXTRA_TUNNEL_ARGS=-x"
  when: (anontunnel_exit_mode_enabled == true and anontunnel_multichain_enabled == false)

- name: Maybe enable multichain {{anontunnel_multichain_enabled}}}
  ini_file: dest=/etc/systemd/system/anontunnel_helper@.service.d/exit_mode.conf section=Service option=Environment value='EXTRA_TUNNEL_ARGS=-xM'
  when: anontunnel_multichain_enabled == true

- name: Reload systemd
  shell: systemctl daemon-reload
  when: service_file.changed

- name: Disable old services
  service: name=anontunnel_helper@{{item}}.service enabled=no state=stopped
  with_sequence: count={{ansible_processor_vcpus * 3}}

- name: Enable one tunnel helper service per CPU core
  service: name=anontunnel_helper@{{item}}.service enabled=yes state=restarted
  with_sequence: count={{ansible_processor_vcpus * 1.5|int }}

- name: Make sure the services are running.
  service: name=anontunnel_helper@{{item}}.service enabled=yes state=started
  with_sequence: count={{ansible_processor_vcpus * 1.5|int }}
